---
# Variable setup.
- name: Include OS-specific variables.
  include_vars: "{{ ansible_os_family }}.yml"

- name: Define nginx_user.
  set_fact:
    nginx_user: "{{ __nginx_user }}"
  when: nginx_user is not defined

# Passenger repository setup.
- name: Add Passenger apt key.
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: 561F9B9CAC40B2F7
    state: present

- name: Add apt HTTPS capabilities.
  apt: name=apt-transport-https state=present

- name: Add Phusion apt repo (Bionic).
  apt_repository:
    repo: 'deb https://oss-binaries.phusionpassenger.com/apt/passenger bionic main'
    state: present
    update_cache: true

# - name: Add Phusion apt repo.
#   apt_repository:
#     repo: 'deb https://oss-binaries.phusionpassenger.com/apt/passenger {{ ansible_distribution_release }} main'
#     state: present
#     update_cache: true

# - name: Install Nginx and Passenger (< Ubuntu 18.04 or Debian).
#   apt:
#     name:
#       - nginx-extras
#       - passenger
#     state: present
#   when: |
#     ansible_distribution != 'Ubuntu'
#     or ansible_distribution_version != '18.04'

- name: Install Passenger (Ubuntu 18.04).
  apt:
    name:
      - nginx
      - libnginx-mod-http-passenger
    state: present
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == '18.04'

- name: Ensure passenger module is enabled (Ubuntu 18.04 only).
  file:
    src: /usr/share/nginx/modules-available/mod-http-passenger.load
    dest: /etc/nginx/modules-enabled/50-mod-http-passenger.conf
    state: link
  when:
    - ansible_distribution == 'Ubuntu'
    - ansible_distribution_version == '18.04'

- name: Create SSL directory
  file:
    mode: 0700
    path: "{{ nginx_path }}/ssl"
    state: directory

- name: Generate strong unique Diffie-Hellman group.
  command: openssl dhparam -out dhparams.pem 2048
  args:
    chdir: "{{ nginx_path }}/ssl"
    creates: "{{ nginx_path }}/ssl/dhparams.pem"
  when: site_ssl_enabled
  notify: reload nginx
  tags: [diffie-hellman, letsencrypt, wordpress, wordpress-setup, nginx-includes, nginx-sites]

- name: Copy h5bp configs
  copy:
    src: templates/h5bp
    dest: "{{ nginx_path }}"
  notify: reload nginx

- name: Create nginx.conf
  template:
    src: "{{ nginx_conf }}"
    dest: "{{ nginx_path }}/nginx.conf"
  notify: reload nginx
  tags: nginx-includes

- name: Disable default server
  file:
    path: "{{ nginx_path }}/sites-enabled/default"
    state: absent
  notify: reload nginx

- name: Enable Nginx to start on boot
  service:
    name: nginx
    enabled: yes
    state: started
    use: service

# Nginx and passenger configuration.
- name: Copy Nginx configuration into place.
  template:
    src: nginx.conf.j2
    dest: /etc/nginx/nginx.conf
  notify: restart nginx

# - name: Configure passenger virtual host.
#   template:
#     src: passenger.j2
#     dest: /etc/nginx/sites-available/passenger
#   notify: restart nginx

# - name: Ensure passenger virtual host is enabled.
#   file:
#     src: /etc/nginx/sites-available/passenger
#     dest: /etc/nginx/sites-enabled/passenger
#     state: link

- name: Ensure default virtual host is removed.
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  when: nginx_remove_default_vhost
  notify: restart nginx
